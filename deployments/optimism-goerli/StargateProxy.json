{
  "address": "0xAdaA223f9D5833C204a46E0C07B50199eD59586f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "DstChainNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Forbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "SwapFailure",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "SwapFailure",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "srcFrom",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "CallFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLD",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "SGReceive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        }
      ],
      "name": "UpdateDstAddress",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "dstAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "dstCallTo",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "dstCallData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "dstGasForCall",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dstNativeAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "estimateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountLD",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "sgReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "swapTo",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "swapData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "dstChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "dstPoolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstMinAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "dstCallTo",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "dstCallData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStargateProxy.TransferParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "transferERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "swapTo",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "swapData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "dstChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "dstPoolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstMinAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "dstCallTo",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "dstCallData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStargateProxy.TransferParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "transferNative",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        }
      ],
      "name": "updateDstAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb7a4324bcce85b0e242802bf26e0bf77ef11635e9f597ce5398dac5d010b3601",
  "receipt": {
    "to": null,
    "from": "0x612ef87bfcd858687160294b0eFFACA0CBA342E2",
    "contractAddress": "0xAdaA223f9D5833C204a46E0C07B50199eD59586f",
    "transactionIndex": 1,
    "gasUsed": "1334076",
    "logsBloom": "0x
    "blockHash": "0x5e0b539ccef0e23486c0495909326522f13d435631b337a68db50d844e7dfd84",
    "transactionHash": "0xb7a4324bcce85b0e242802bf26e0bf77ef11635e9f597ce5398dac5d010b3601",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7304260,
        "transactionHash": "0xb7a4324bcce85b0e242802bf26e0bf77ef11635e9f597ce5398dac5d010b3601",
        "address": "0xAdaA223f9D5833C204a46E0C07B50199eD59586f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000612ef87bfcd858687160294b0effaca0cba342e2"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5e0b539ccef0e23486c0495909326522f13d435631b337a68db50d844e7dfd84"
      }
    ],
    "blockNumber": 7304260,
    "cumulativeGasUsed": "1380989",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x95461eF0e0ecabC049a5c4a6B98Ca7B335FAF068"
  ],
  "numDeployments": 4,
  "solcInputHash": "5022ddfe76193fdad5900e1f5084b083",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"DstChainNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"PoolNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"SwapFailure\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"SwapFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"srcFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"CallFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"SGReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"}],\"name\":\"UpdateDstAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"dstAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"dstCallTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"dstCallData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"estimateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"swapTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstMinAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dstCallTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"dstCallData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStargateProxy.TransferParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"swapTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstMinAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dstCallTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"dstCallData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStargateProxy.TransferParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"transferNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"}],\"name\":\"updateDstAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StargateProxy.sol\":\"StargateProxy\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/StargateProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IStargateReceiver.sol\\\";\\nimport \\\"./interfaces/IStargateProxy.sol\\\";\\nimport \\\"./interfaces/IStargateRouter.sol\\\";\\nimport \\\"./interfaces/IStargateFactory.sol\\\";\\nimport \\\"./interfaces/IStargatePool.sol\\\";\\nimport \\\"./interfaces/IStargateProxyReceiver.sol\\\";\\nimport \\\"./libraries/SwapUtils.sol\\\";\\n\\ncontract StargateProxy is Ownable, IStargateReceiver, IStargateProxy {\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n\\n    address public immutable router;\\n    address public immutable factory;\\n    mapping(uint16 => address) public dstAddress;\\n\\n    constructor(address _router) {\\n        router = _router;\\n        factory = IStargateRouter(_router).factory();\\n    }\\n\\n    function estimateFee(\\n        uint16 dstChainId,\\n        address dstCallTo,\\n        bytes calldata dstCallData,\\n        uint256 dstGasForCall,\\n        uint256 dstNativeAmount,\\n        address from\\n    ) external view returns (uint256) {\\n        address dst = dstAddress[dstChainId];\\n        if (dst == address(0)) revert DstChainNotFound(dstChainId);\\n\\n        (uint256 fee, ) = IStargateRouter(router).quoteLayerZeroFee(\\n            dstChainId,\\n            1, /*TYPE_SWAP_REMOTE*/\\n            abi.encodePacked(dst),\\n            abi.encodePacked(from, dstCallTo, dstCallData),\\n            IStargateRouter.lzTxObj(dstGasForCall, dstNativeAmount, abi.encodePacked(from))\\n        );\\n        return fee;\\n    }\\n\\n    function updateDstAddress(uint16 dstChainId, address _dstAddress) external onlyOwner {\\n        dstAddress[dstChainId] = _dstAddress;\\n        emit UpdateDstAddress(dstChainId, _dstAddress);\\n    }\\n\\n    function transferNative(uint256 amount, TransferParams calldata params) external payable {\\n        if (params.swapTo != address(0)) {\\n            SwapUtils.swapNative(amount, params.swapTo, params.swapData);\\n        }\\n        _transfer(params, payable(msg.sender), msg.value - amount);\\n\\n        uint256 balance = address(this).balance;\\n        if (balance > 0) {\\n            payable(msg.sender).sendValue(balance);\\n        }\\n    }\\n\\n    function transferERC20(\\n        address token,\\n        uint256 amount,\\n        TransferParams calldata params\\n    ) external payable {\\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\\n\\n        if (params.swapTo != address(0)) {\\n            SwapUtils.swapERC20(token, amount, params.swapTo, params.swapData, true, msg.sender);\\n        }\\n        _transfer(params, payable(msg.sender), msg.value);\\n    }\\n\\n    function _transfer(\\n        TransferParams calldata params,\\n        address payable from,\\n        uint256 fee\\n    ) internal {\\n        address dst = dstAddress[params.dstChainId];\\n        if (dst == address(0)) revert DstChainNotFound(params.dstChainId);\\n\\n        address pool = IStargateFactory(factory).getPool(params.poolId);\\n        if (pool == address(0)) revert PoolNotFound(params.poolId);\\n\\n        address token = IStargatePool(pool).token();\\n        IERC20(token).approve(router, params.amount);\\n        IStargateRouter(router).swap{value: fee}(\\n            params.dstChainId,\\n            params.poolId,\\n            params.dstPoolId,\\n            from,\\n            params.amount,\\n            params.dstMinAmount,\\n            IStargateRouter.lzTxObj(params.dstGasForCall, params.dstNativeAmount, abi.encodePacked(from)),\\n            abi.encodePacked(dst),\\n            abi.encodePacked(from, params.dstCallTo, params.dstCallData)\\n        );\\n\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\n        if (balance > 0) {\\n            IERC20(token).safeTransfer(msg.sender, balance);\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // RECEIVER FUNCTIONS\\n    function sgReceive(\\n        uint16 srcChainId,\\n        bytes calldata srcAddress,\\n        uint256 nonce,\\n        address token,\\n        uint256 amountLD,\\n        bytes calldata payload\\n    ) external {\\n        if (msg.sender != router) revert Forbidden();\\n\\n        address srcFrom = address(bytes20(payload[0:20]));\\n        address to = address(bytes20(payload[20:40]));\\n        if (to != address(0)) {\\n            IERC20(token).safeTransfer(to, amountLD);\\n            try IStargateProxyReceiver(to).sgProxyReceive(srcFrom, token, amountLD, payload[40:]) {} catch (\\n                bytes memory reason\\n            ) {\\n                try IStargateProxyReceiver(to).onReceiveERC20(token, srcFrom, amountLD) {} catch {}\\n                emit CallFailure(srcFrom, to, payload[40:], reason);\\n            }\\n        }\\n\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\n        if (balance > 0) {\\n            IERC20(token).safeTransfer(to == address(0) ? srcFrom : to, balance);\\n            if (to != address(0)) {\\n                try IStargateProxyReceiver(to).onReceiveERC20(token, srcFrom, balance) {} catch {}\\n            }\\n        }\\n\\n        balance = address(this).balance;\\n        if (balance > 0) {\\n            srcFrom.call{value: balance}(\\\"\\\");\\n        }\\n\\n        emit SGReceive(srcChainId, srcAddress, nonce, token, amountLD, payload);\\n    }\\n}\\n\",\"keccak256\":\"0xb5ff6c7d86f4751cca60bb17348668bf009a81dc678d322d048f9a9cc2a02202\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20Receiver {\\n    event OnReceiveERC20(address indexed token, address indexed to, uint256 amount);\\n\\n    function onReceiveERC20(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xe92c2cc9a28fd8adc3c3a01645f22e1529dd6aca055a1e7a362c7492620f5b49\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateFactory {\\n    function getPool(uint256 poolId) external view returns (address);\\n\\n    function allPools(uint256 index) external view returns (address);\\n\\n    function allPoolsLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x29447b67ae12e2954b47383d8101eb1826d2902f1c62c715755f9ac0c76395ae\",\"license\":\"MIT\"},\"contracts/interfaces/IStargatePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargatePool {\\n    function poolId() external view returns (uint256);\\n\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0x4d0d8f0773939f6636c11e30d5f620183bede767e267231fb69f2973e343bc26\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateProxy {\\n    error SwapFailure(bytes reason);\\n    error DstChainNotFound(uint16 chainId);\\n    error PoolNotFound(uint256 poolId);\\n    error Forbidden();\\n    error InvalidPayload();\\n\\n    event UpdateDstAddress(uint16 indexed dstChainId, address indexed dstAddress);\\n    event CallFailure(address indexed srcFrom, address indexed to, bytes data, bytes reason);\\n    event SGReceive(\\n        uint16 indexed srcChainId,\\n        bytes indexed srcAddress,\\n        uint256 indexed nonce,\\n        address token,\\n        uint256 amountLD,\\n        bytes payload\\n    );\\n\\n    struct TransferParams {\\n        address swapTo;\\n        bytes swapData;\\n        uint256 poolId;\\n        uint256 amount;\\n        uint16 dstChainId;\\n        uint256 dstPoolId;\\n        uint256 dstMinAmount;\\n        address dstCallTo;\\n        bytes dstCallData;\\n        uint256 dstGasForCall;\\n        uint256 dstNativeAmount;\\n    }\\n\\n    function estimateFee(\\n        uint16 dstChainId,\\n        address dstCallTo,\\n        bytes calldata dstCallData,\\n        uint256 dstGasForCall,\\n        uint256 dstNativeAmount,\\n        address from\\n    ) external view returns (uint256);\\n\\n    function updateDstAddress(uint16 dstChainId, address _dstAddress) external;\\n\\n    function transferNative(uint256 amount, TransferParams calldata params) external payable;\\n\\n    function transferERC20(\\n        address token,\\n        uint256 amount,\\n        TransferParams calldata params\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xae1f7363b288d5010830bb87ff3d4fca374123fcc667600e2f4e82afda442c0e\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateProxyReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Receiver.sol\\\";\\n\\ninterface IStargateProxyReceiver is IERC20Receiver {\\n    error InvalidProxy();\\n\\n    event SgProxyReceive(address indexed srcFrom, address indexed token, uint256 amount, bytes data);\\n\\n    function sgProxy() external view returns (address);\\n\\n    function sgProxyReceive(\\n        address srcFrom,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x716f67acc0b1e542d4da34f52d5e327725daceb4abd9c941c3d9d87e04c55e4e\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateReceiver {\\n    function sgReceive(\\n        uint16 _chainId,\\n        bytes memory _srcAddress,\\n        uint256 _nonce,\\n        address _token,\\n        uint256 amountLD,\\n        bytes memory payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0x94c6c2b54161f27ca5c45ea5d817a6dbe8ad3e4b052ba9c3da7346dfc39983ba\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateRouter {\\n    event Revert(uint8 bridgeFunctionType, uint16 chainId, bytes srcAddress, uint256 nonce);\\n    event CachedSwapSaved(\\n        uint16 chainId,\\n        bytes srcAddress,\\n        uint256 nonce,\\n        address token,\\n        uint256 amountLD,\\n        address to,\\n        bytes payload,\\n        bytes reason\\n    );\\n    event RevertRedeemLocal(\\n        uint16 srcChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        bytes to,\\n        uint256 redeemAmountSD,\\n        uint256 mintAmountSD,\\n        uint256 indexed nonce,\\n        bytes indexed srcAddress\\n    );\\n    event RedeemLocalCallback(\\n        uint16 srcChainId,\\n        bytes indexed srcAddress,\\n        uint256 indexed nonce,\\n        uint256 srcPoolId,\\n        uint256 dstPoolId,\\n        address to,\\n        uint256 amountSD,\\n        uint256 mintAmountSD\\n    );\\n\\n    struct lzTxObj {\\n        uint256 dstGasForCall;\\n        uint256 dstNativeAmount;\\n        bytes dstNativeAddr;\\n    }\\n\\n    function factory() external view returns (address);\\n\\n    function bridge() external view returns (address);\\n\\n    function revertLookup(\\n        uint16 chainId,\\n        bytes calldata srcAddress,\\n        uint256 nonce\\n    ) external view returns (bytes memory);\\n\\n    function cachedSwapLookup(\\n        uint16 chainId,\\n        bytes calldata srcAddress,\\n        uint256 nonce\\n    )\\n        external\\n        view\\n        returns (\\n            address token,\\n            uint256 amountLD,\\n            address to,\\n            bytes calldata payload\\n        );\\n\\n    function addLiquidity(\\n        uint256 _poolId,\\n        uint256 _amountLD,\\n        address _to\\n    ) external;\\n\\n    function swap(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress,\\n        uint256 _amountLD,\\n        uint256 _minAmountLD,\\n        lzTxObj memory _lzTxParams,\\n        bytes calldata _to,\\n        bytes calldata _payload\\n    ) external payable;\\n\\n    function redeemRemote(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress,\\n        uint256 _amountLP,\\n        uint256 _minAmountLD,\\n        bytes calldata _to,\\n        lzTxObj memory _lzTxParams\\n    ) external payable;\\n\\n    function instantRedeemLocal(\\n        uint16 _srcPoolId,\\n        uint256 _amountLP,\\n        address _to\\n    ) external returns (uint256);\\n\\n    function redeemLocal(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress,\\n        uint256 _amountLP,\\n        bytes calldata _to,\\n        lzTxObj memory _lzTxParams\\n    ) external payable;\\n\\n    function sendCredits(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress\\n    ) external payable;\\n\\n    function quoteLayerZeroFee(\\n        uint16 _dstChainId,\\n        uint8 _functionType,\\n        bytes calldata _toAddress,\\n        bytes calldata _transferAndCallPayload,\\n        lzTxObj memory _lzTxParams\\n    ) external view returns (uint256, uint256);\\n\\n    function revertRedeemLocal(\\n        uint16 _dstChainId,\\n        bytes calldata _srcAddress,\\n        uint256 _nonce,\\n        address payable _refundAddress,\\n        lzTxObj memory _lzTxParams\\n    ) external payable;\\n\\n    function retryRevert(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint256 _nonce\\n    ) external payable;\\n\\n    function clearCachedSwap(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint256 _nonce\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa7870e58b768496033192fb5ad3ab0f85c561ccf113548636931054796abc4d2\",\"license\":\"MIT\"},\"contracts/libraries/SwapUtils.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nlibrary SwapUtils {\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n\\n    error SwapFailure(bytes reason);\\n\\n    function swapNative(\\n        uint256 amount,\\n        address to,\\n        bytes memory data\\n    ) internal {\\n        (bool ok, bytes memory reason) = to.call{value: amount}(data);\\n        if (!ok) revert SwapFailure(reason);\\n    }\\n\\n    function swapERC20(\\n        address token,\\n        uint256 amount,\\n        address to,\\n        bytes memory data,\\n        bool sweep,\\n        address refundAddress\\n    ) internal {\\n        IERC20(token).approve(to, amount);\\n        (bool ok, bytes memory reason) = to.call(data);\\n        if (!ok) revert SwapFailure(reason);\\n        IERC20(token).approve(to, 0);\\n\\n        if (sweep) {\\n            uint256 balance = IERC20(token).balanceOf(address(this));\\n            if (balance > 0) {\\n                IERC20(token).safeTransfer(refundAddress, balance);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd066e5c1accfab0cd7be0d6bf7556e43dbae04d15063c28e408c062b351a42df\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x60c080604052346200013457620000309062001825803803809162000025828562000139565b833981019062000173565b60008054336001600160a01b03198216811783556040519293602092849260049284926001600160a01b03929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08a80a3608081905263c45a015560e01b8352165afa918215620001285791620000f3575b5060a052604051611690908162000195823960805181818160af015281816104cb01528181610c0201528181611264015281816113970152611460015260a05181818161042d01526111dc0152f35b62000119915060203d811162000120575b62000110818362000139565b81019062000173565b38620000a4565b503d62000104565b604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200015d57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126200013457516001600160a01b038116810362000134579056fe608080604052600436101561001357600080fd5b600090813560e01c908163452cdfc514610d1a5750806348b6fbd014610c9c57806359f74e4714610a92578063715018a614610a385780638da5cb5b14610a1157806395db255414610860578063ab8236f31461045c578063c45a015514610417578063cf04e1af146101a7578063f2fde38b146100e15763f887ea401461009a57600080fd5b346100de57806003193601126100de576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b50346100de5760203660031901126100de576100fb610d7b565b610103610dbf565b6001600160a01b0390811690811561015357600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50600319606036820112610413576101bd610d7b565b60249190604435833567ffffffffffffffff821161040f576101608260040194833603011261040f57604080516323b872dd60e01b60208083019190915233888301908152308183015280840185905282900392830182526001600160a01b039586169590949092909161023e916102389060600182610e79565b86610fe7565b8161024887610f05565b1661025d575b8761025a343389611188565b80f35b8761027d6102768961026e8a610f05565b940189610f19565b3691610f68565b60405163095ea7b360e01b8082526001600160a01b03851660048301526024820196909652908682604481868c5af19182156104045783926103e7575b50868151910182855af16102cc610f9f565b90156103bf57506040519283521660048201528585820152818160448189875af180156103b457610387575b508060405180956370a0823160e01b825230600483015281855afa90811561037c578591610347575b5061025a935080610335575b80808061024e565b6103409133906115f8565b388061032d565b905083813d8311610375575b61035d8183610e79565b810103126103705761025a925138610321565b600080fd5b503d610353565b6040513d87823e3d90fd5b6103a690823d84116103ad575b61039e8183610e79565b810190610fcf565b50386102f8565b503d610394565b6040513d88823e3d90fd5b604051630c369d2560e01b8152600481018690529081906103e390828b0190610e9b565b0390fd5b6103fd90883d8a116103ad5761039e8183610e79565b50386102ba565b6040513d85823e3d90fd5b8580fd5b5080fd5b50346100de57806003193601126100de576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100de5760c03660031901126100de57610476610d54565b67ffffffffffffffff60243581811161085c57610497903690600401610d91565b6001600160a01b0392909190606435808516900361040f5760a43590811161040f576104c7903690600401610d91565b92847f000000000000000000000000000000000000000000000000000000000000000016330361084a5783601411610672578360281161067257601482013560601c6106c6575b6040516370a0823160e01b815230600482015287906020816024816064358b165afa9081156106bb578291610687575b50806105d7575b50927f4798e9efbbc84d88c90c46f86d32ae4d8c033fe3a2021cd045cab33f7102164a9347806105bb575b50508160405192839283378101888152039020936105b560405192839260643516835260843560208401526060604084015261ffff6044359816956060840191611639565b0390a480f35b81808092873560601c5af1506105cf610f9f565b508738610570565b601484013560601c610676576105f781853560601c5b89606435166115f8565b601484013560601c1561054557601484013560601c3b156104135760405163248ff46d60e01b8152606480356001600160a01b03166004830152853560601c60248301526044820192909252908290829081908101038183601489013560601c5af1156105455761066790610e49565b610672578638610545565b8680fd5b6105f781601486013560601c6105ed565b9150506020813d82116106b3575b816106a260209383610e79565b81010312610370578790513861053e565b3d9150610695565b6040513d84823e3d90fd5b6106de608435601484013560601c87606435166115f8565b601482013560601c3b15610672576040516344ab9e6360e01b8152823560601c600482015285606435166024820152608435604482015260806064820152878180610734608482016027198a0160288901611639565b038183601488013560601c5af19081610837575b5061083257610755610f9f565b601483013560601c3b1561082e5760405163248ff46d60e01b8152606480356001600160a01b03166004830152843560601c60248301526084356044830152899190829082908190810103818360148a013560601c5af161081a575b505060405190604082527f7d392e8caca12cdca700dff8a794504e432b8ddb7950261ea7997b9cd6a1b2b66107f160408401602719890160288801611639565b92808403602082015280610812601488013560601c95883560601c95610e9b565b0390a361050e565b61082390610e49565b61082e5787386107b1565b8780fd5b61050e565b61084390989198610e49565b9638610748565b604051631dd2188d60e31b8152600490fd5b8380fd5b506003196040368201126104135760249060043583833567ffffffffffffffff81116104135761016081600401948236030112610413576001600160a01b036108a885610f05565b166109b3575b50503403903482116109a057906108c6913390611188565b47806108d0578280f35b80471061095c578280808093335af16108e7610f9f565b50156108f257808280f35b608490603a6040519162461bcd60e51b8352602060048401528201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b60405162461bcd60e51b815260206004820152601d818401527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b634e487b7160e01b845260116004528284fd5b81906109cd610276876109c588610f05565b930187610f19565b9084602083519301915af16109e0610f9f565b90156109ed5784906108ae565b604051630c369d2560e01b8152602060048201529081906103e39082870190610e9b565b50346100de57806003193601126100de57546040516001600160a01b039091168152602090f35b50346100de57806003193601126100de57610a51610dbf565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346100de576003199060c0368301126100de57610aae610d54565b610ab6610d65565b9060443567ffffffffffffffff811161085c57610ad7903690600401610d91565b946001600160a01b039260a435919084831683036106725761ffff16918287526020976001895260408820549486861615610c835790808a949392604051976001600160601b03199a8b809260601b16888b015260148a52610b388a610e5d565b6040519b8c9660601b16809887015260601b1660348501526048840137810188604882015203602881018752604801610b719087610e79565b604051918883015260148252610b8682610e5d565b60405191610b9383610e17565b60643583526084358984015260408301526040519586948594630a51236960e01b8652600486015260248501600190526044850160a0905260a48501610bd891610e9b565b82858203016064860152610beb91610e9b565b90838203016084840152610bfe91610edb565b03917f00000000000000000000000000000000000000000000000000000000000000001691815a93604094fa918215610c77578092610c42575b5050604051908152f35b9091506040823d604011610c6f575b81610c5e60409383610e79565b810103126100de5750513880610c38565b3d9150610c51565b604051903d90823e3d90fd5b6040516315fe4c1560e01b815260048101869052602490fd5b50346100de5760403660031901126100de57610cb6610d54565b61ffff610cc1610d65565b91610cca610dbf565b1680835260016020526040832080546001600160a01b0319166001600160a01b0390931692831790557f2a00dad3333a840171ea0391ef1a1241e87753bd39154bffbeee262a59a4b09d8380a380f35b9050346104135760203660031901126104135760209161ffff610d3b610d54565b1681526001835260409020546001600160a01b03168152f35b6004359061ffff8216820361037057565b602435906001600160a01b038216820361037057565b600435906001600160a01b038216820361037057565b9181601f840112156103705782359167ffffffffffffffff8311610370576020838186019501011161037057565b6000546001600160a01b03163303610dd357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6060810190811067ffffffffffffffff821117610e3357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610e3357604052565b6040810190811067ffffffffffffffff821117610e3357604052565b90601f8019910116810190811067ffffffffffffffff821117610e3357604052565b919082519283825260005b848110610ec7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ea6565b9060606040610f029380518452602081015160208501520151918160408201520190610e9b565b90565b356001600160a01b03811681036103705790565b903590601e1981360301821215610370570180359067ffffffffffffffff82116103705760200191813603831361037057565b67ffffffffffffffff8111610e3357601f01601f191660200190565b929192610f7482610f4c565b91610f826040519384610e79565b829481845281830111610370578281602093846000960137010152565b3d15610fca573d90610fb082610f4c565b91610fbe6040519384610e79565b82523d6000602084013e565b606090565b90816020910312610370575180151581036103705790565b604051611045916001600160a01b031661100082610e5d565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af161103f610f9f565b916110c1565b8051908161105257505050565b8280611062938301019101610fcf565b1561106a5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b9192901561112357508151156110d5575090565b3b156110de5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156111365750805190602001fd5b60405162461bcd60e51b8152602060048201529081906103e3906024830190610e9b565b3561ffff811681036103705790565b9081602091031261037057516001600160a01b03811681036103705790565b9291926111976080820161115a565b61ffff16600090815260016020526040812054949092906001600160a01b038616156115d1576040805163068bcd8d60e01b81529084013560048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561037c5785916115b2575b506001600160a01b03169586156115965760206004969760405197888092637e062a3560e11b82525afa95861561037c578596611565575b5060405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526060850135602482015260208180604481010381896001600160a01b038c165af180156103b457611546575b506112c26080850161115a565b906040516001600160601b03198560601b166020820152601481526112e681610e5d565b604051906112f382610e17565b610120870135825261014087013560208301526040820152604051916001600160601b03199060601b1660208301526014825261132f82610e5d565b61133b60e08701610f05565b90611395604861134f6101008a018a610f19565b60405160608b811b6bffffffffffffffffffffffff19908116602084015297901b9096166034870152859181908484013781018b83820152036028810185520183610e79565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561082e5761ffff92889695949261144c61143961145c9460c06040519c8d9b8c9a8b9a6327efc43f60e21b8c521660048b0152604082013560248b015260a082013560448b015260018060a01b031660648a0152606081013560848a0152013560a488015261012060c4880152610124870190610edb565b60031993848783030160e4880152610e9b565b9184830301610104850152610e9b565b03917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156106bb5761151a575b506040516370a0823160e01b81523060048201526020816024816001600160a01b0387165afa918215610c7757916114e8575b50806114d2575050565b6114e69133906001600160a01b03166115f8565b565b90506020813d602011611512575b8161150360209383610e79565b810103126103705751386114c8565b3d91506114f6565b67ffffffffffffffff81116115325760405238611495565b634e487b7160e01b82526041600452602482fd5b61155e9060203d6020116103ad5761039e8183610e79565b50386112b5565b61158891965060203d60201161158f575b6115808183610e79565b810190611169565b943861124c565b503d611576565b604080516302ad881560e41b8152908501356004820152602490fd5b6115cb915060203d60201161158f576115808183610e79565b38611214565b60246115df6080850161115a565b61ffff604051916315fe4c1560e01b8352166004820152fd5b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526114e691611634606483610e79565b610fe7565b908060209392818452848401376000828201840152601f01601f191601019056fea26469706673582212203ff06dc2abbfbd1189ba0b24fb02ad5392cbeae3aa6e34300606a1e1577c6ac964736f6c63430008110033",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b600090813560e01c908163452cdfc514610d1a5750806348b6fbd014610c9c57806359f74e4714610a92578063715018a614610a385780638da5cb5b14610a1157806395db255414610860578063ab8236f31461045c578063c45a015514610417578063cf04e1af146101a7578063f2fde38b146100e15763f887ea401461009a57600080fd5b346100de57806003193601126100de576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b50346100de5760203660031901126100de576100fb610d7b565b610103610dbf565b6001600160a01b0390811690811561015357600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50600319606036820112610413576101bd610d7b565b60249190604435833567ffffffffffffffff821161040f576101608260040194833603011261040f57604080516323b872dd60e01b60208083019190915233888301908152308183015280840185905282900392830182526001600160a01b039586169590949092909161023e916102389060600182610e79565b86610fe7565b8161024887610f05565b1661025d575b8761025a343389611188565b80f35b8761027d6102768961026e8a610f05565b940189610f19565b3691610f68565b60405163095ea7b360e01b8082526001600160a01b03851660048301526024820196909652908682604481868c5af19182156104045783926103e7575b50868151910182855af16102cc610f9f565b90156103bf57506040519283521660048201528585820152818160448189875af180156103b457610387575b508060405180956370a0823160e01b825230600483015281855afa90811561037c578591610347575b5061025a935080610335575b80808061024e565b6103409133906115f8565b388061032d565b905083813d8311610375575b61035d8183610e79565b810103126103705761025a925138610321565b600080fd5b503d610353565b6040513d87823e3d90fd5b6103a690823d84116103ad575b61039e8183610e79565b810190610fcf565b50386102f8565b503d610394565b6040513d88823e3d90fd5b604051630c369d2560e01b8152600481018690529081906103e390828b0190610e9b565b0390fd5b6103fd90883d8a116103ad5761039e8183610e79565b50386102ba565b6040513d85823e3d90fd5b8580fd5b5080fd5b50346100de57806003193601126100de576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100de5760c03660031901126100de57610476610d54565b67ffffffffffffffff60243581811161085c57610497903690600401610d91565b6001600160a01b0392909190606435808516900361040f5760a43590811161040f576104c7903690600401610d91565b92847f000000000000000000000000000000000000000000000000000000000000000016330361084a5783601411610672578360281161067257601482013560601c6106c6575b6040516370a0823160e01b815230600482015287906020816024816064358b165afa9081156106bb578291610687575b50806105d7575b50927f4798e9efbbc84d88c90c46f86d32ae4d8c033fe3a2021cd045cab33f7102164a9347806105bb575b50508160405192839283378101888152039020936105b560405192839260643516835260843560208401526060604084015261ffff6044359816956060840191611639565b0390a480f35b81808092873560601c5af1506105cf610f9f565b508738610570565b601484013560601c610676576105f781853560601c5b89606435166115f8565b601484013560601c1561054557601484013560601c3b156104135760405163248ff46d60e01b8152606480356001600160a01b03166004830152853560601c60248301526044820192909252908290829081908101038183601489013560601c5af1156105455761066790610e49565b610672578638610545565b8680fd5b6105f781601486013560601c6105ed565b9150506020813d82116106b3575b816106a260209383610e79565b81010312610370578790513861053e565b3d9150610695565b6040513d84823e3d90fd5b6106de608435601484013560601c87606435166115f8565b601482013560601c3b15610672576040516344ab9e6360e01b8152823560601c600482015285606435166024820152608435604482015260806064820152878180610734608482016027198a0160288901611639565b038183601488013560601c5af19081610837575b5061083257610755610f9f565b601483013560601c3b1561082e5760405163248ff46d60e01b8152606480356001600160a01b03166004830152843560601c60248301526084356044830152899190829082908190810103818360148a013560601c5af161081a575b505060405190604082527f7d392e8caca12cdca700dff8a794504e432b8ddb7950261ea7997b9cd6a1b2b66107f160408401602719890160288801611639565b92808403602082015280610812601488013560601c95883560601c95610e9b565b0390a361050e565b61082390610e49565b61082e5787386107b1565b8780fd5b61050e565b61084390989198610e49565b9638610748565b604051631dd2188d60e31b8152600490fd5b8380fd5b506003196040368201126104135760249060043583833567ffffffffffffffff81116104135761016081600401948236030112610413576001600160a01b036108a885610f05565b166109b3575b50503403903482116109a057906108c6913390611188565b47806108d0578280f35b80471061095c578280808093335af16108e7610f9f565b50156108f257808280f35b608490603a6040519162461bcd60e51b8352602060048401528201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b60405162461bcd60e51b815260206004820152601d818401527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b634e487b7160e01b845260116004528284fd5b81906109cd610276876109c588610f05565b930187610f19565b9084602083519301915af16109e0610f9f565b90156109ed5784906108ae565b604051630c369d2560e01b8152602060048201529081906103e39082870190610e9b565b50346100de57806003193601126100de57546040516001600160a01b039091168152602090f35b50346100de57806003193601126100de57610a51610dbf565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346100de576003199060c0368301126100de57610aae610d54565b610ab6610d65565b9060443567ffffffffffffffff811161085c57610ad7903690600401610d91565b946001600160a01b039260a435919084831683036106725761ffff16918287526020976001895260408820549486861615610c835790808a949392604051976001600160601b03199a8b809260601b16888b015260148a52610b388a610e5d565b6040519b8c9660601b16809887015260601b1660348501526048840137810188604882015203602881018752604801610b719087610e79565b604051918883015260148252610b8682610e5d565b60405191610b9383610e17565b60643583526084358984015260408301526040519586948594630a51236960e01b8652600486015260248501600190526044850160a0905260a48501610bd891610e9b565b82858203016064860152610beb91610e9b565b90838203016084840152610bfe91610edb565b03917f00000000000000000000000000000000000000000000000000000000000000001691815a93604094fa918215610c77578092610c42575b5050604051908152f35b9091506040823d604011610c6f575b81610c5e60409383610e79565b810103126100de5750513880610c38565b3d9150610c51565b604051903d90823e3d90fd5b6040516315fe4c1560e01b815260048101869052602490fd5b50346100de5760403660031901126100de57610cb6610d54565b61ffff610cc1610d65565b91610cca610dbf565b1680835260016020526040832080546001600160a01b0319166001600160a01b0390931692831790557f2a00dad3333a840171ea0391ef1a1241e87753bd39154bffbeee262a59a4b09d8380a380f35b9050346104135760203660031901126104135760209161ffff610d3b610d54565b1681526001835260409020546001600160a01b03168152f35b6004359061ffff8216820361037057565b602435906001600160a01b038216820361037057565b600435906001600160a01b038216820361037057565b9181601f840112156103705782359167ffffffffffffffff8311610370576020838186019501011161037057565b6000546001600160a01b03163303610dd357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6060810190811067ffffffffffffffff821117610e3357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610e3357604052565b6040810190811067ffffffffffffffff821117610e3357604052565b90601f8019910116810190811067ffffffffffffffff821117610e3357604052565b919082519283825260005b848110610ec7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ea6565b9060606040610f029380518452602081015160208501520151918160408201520190610e9b565b90565b356001600160a01b03811681036103705790565b903590601e1981360301821215610370570180359067ffffffffffffffff82116103705760200191813603831361037057565b67ffffffffffffffff8111610e3357601f01601f191660200190565b929192610f7482610f4c565b91610f826040519384610e79565b829481845281830111610370578281602093846000960137010152565b3d15610fca573d90610fb082610f4c565b91610fbe6040519384610e79565b82523d6000602084013e565b606090565b90816020910312610370575180151581036103705790565b604051611045916001600160a01b031661100082610e5d565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af161103f610f9f565b916110c1565b8051908161105257505050565b8280611062938301019101610fcf565b1561106a5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b9192901561112357508151156110d5575090565b3b156110de5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156111365750805190602001fd5b60405162461bcd60e51b8152602060048201529081906103e3906024830190610e9b565b3561ffff811681036103705790565b9081602091031261037057516001600160a01b03811681036103705790565b9291926111976080820161115a565b61ffff16600090815260016020526040812054949092906001600160a01b038616156115d1576040805163068bcd8d60e01b81529084013560048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561037c5785916115b2575b506001600160a01b03169586156115965760206004969760405197888092637e062a3560e11b82525afa95861561037c578596611565575b5060405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526060850135602482015260208180604481010381896001600160a01b038c165af180156103b457611546575b506112c26080850161115a565b906040516001600160601b03198560601b166020820152601481526112e681610e5d565b604051906112f382610e17565b610120870135825261014087013560208301526040820152604051916001600160601b03199060601b1660208301526014825261132f82610e5d565b61133b60e08701610f05565b90611395604861134f6101008a018a610f19565b60405160608b811b6bffffffffffffffffffffffff19908116602084015297901b9096166034870152859181908484013781018b83820152036028810185520183610e79565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561082e5761ffff92889695949261144c61143961145c9460c06040519c8d9b8c9a8b9a6327efc43f60e21b8c521660048b0152604082013560248b015260a082013560448b015260018060a01b031660648a0152606081013560848a0152013560a488015261012060c4880152610124870190610edb565b60031993848783030160e4880152610e9b565b9184830301610104850152610e9b565b03917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156106bb5761151a575b506040516370a0823160e01b81523060048201526020816024816001600160a01b0387165afa918215610c7757916114e8575b50806114d2575050565b6114e69133906001600160a01b03166115f8565b565b90506020813d602011611512575b8161150360209383610e79565b810103126103705751386114c8565b3d91506114f6565b67ffffffffffffffff81116115325760405238611495565b634e487b7160e01b82526041600452602482fd5b61155e9060203d6020116103ad5761039e8183610e79565b50386112b5565b61158891965060203d60201161158f575b6115808183610e79565b810190611169565b943861124c565b503d611576565b604080516302ad881560e41b8152908501356004820152602490fd5b6115cb915060203d60201161158f576115808183610e79565b38611214565b60246115df6080850161115a565b61ffff604051916315fe4c1560e01b8352166004820152fd5b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526114e691611634606483610e79565b610fe7565b908060209392818452848401376000828201840152601f01601f191601019056fea26469706673582212203ff06dc2abbfbd1189ba0b24fb02ad5392cbeae3aa6e34300606a1e1577c6ac964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/StargateProxy.sol:StargateProxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1964,
        "contract": "contracts/StargateProxy.sol:StargateProxy",
        "label": "dstAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      }
    }
  }
}