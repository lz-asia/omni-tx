{
  "address": "0xdfA6c0F1236bF34c0856536a3b67eE2e7390C86a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "DstChainNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Forbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidDstSwapData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "SwapFailure",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "CallFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountLD",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "SGReceive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        }
      ],
      "name": "UpdateDstAddress",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "dstAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "dstCallData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "dstGasForCall",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dstNativeAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "estimateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountLD",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "sgReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "swapData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "dstChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "dstPoolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstMinAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstCallData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStargateProxy.TransferParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "transferERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "swapData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "dstChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "dstPoolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstMinAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstCallData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStargateProxy.TransferParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "transferNative",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        }
      ],
      "name": "updateDstAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc437cd7d96b1e0df44de2bd39f0dd268fe09dd82b11280d55ca53d778026ede5",
  "receipt": {
    "to": null,
    "from": "0x612ef87bfcd858687160294b0eFFACA0CBA342E2",
    "contractAddress": "0xdfA6c0F1236bF34c0856536a3b67eE2e7390C86a",
    "transactionIndex": 51,
    "gasUsed": "1160041",
    "logsBloom": "0x
    "blockHash": "0x43048120c8520db00c366ad850f91d971a8aebb83195745ac3fdf720fd4dd711",
    "transactionHash": "0xc437cd7d96b1e0df44de2bd39f0dd268fe09dd82b11280d55ca53d778026ede5",
    "logs": [
      {
        "transactionIndex": 51,
        "blockNumber": 8691757,
        "transactionHash": "0xc437cd7d96b1e0df44de2bd39f0dd268fe09dd82b11280d55ca53d778026ede5",
        "address": "0xdfA6c0F1236bF34c0856536a3b67eE2e7390C86a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000612ef87bfcd858687160294b0effaca0cba342e2"
        ],
        "data": "0x",
        "logIndex": 96,
        "blockHash": "0x43048120c8520db00c366ad850f91d971a8aebb83195745ac3fdf720fd4dd711"
      }
    ],
    "blockNumber": 8691757,
    "cumulativeGasUsed": "6321261",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7612aE2a34E5A363E137De748801FB4c86499152"
  ],
  "numDeployments": 1,
  "solcInputHash": "922311866daec46e5264cae60d6c8bf1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"DstChainNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDstSwapData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"PoolNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"SwapFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"CallFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"SGReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"}],\"name\":\"UpdateDstAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"dstAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"dstCallData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"estimateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"swapData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstMinAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstCallData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStargateProxy.TransferParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"swapData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstMinAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstCallData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStargateProxy.TransferParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"transferNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"}],\"name\":\"updateDstAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StargateProxy.sol\":\"StargateProxy\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/StargateProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IStargateReceiver.sol\\\";\\nimport \\\"./interfaces/IStargateProxy.sol\\\";\\nimport \\\"./interfaces/IStargateRouter.sol\\\";\\nimport \\\"./interfaces/IStargateFactory.sol\\\";\\nimport \\\"./interfaces/IStargatePool.sol\\\";\\nimport \\\"./interfaces/IStargateVault.sol\\\";\\n\\ncontract StargateProxy is Ownable, IStargateReceiver, IStargateProxy {\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n\\n    address public immutable router;\\n    address public immutable factory;\\n    mapping(uint16 => address) public dstAddress;\\n\\n    constructor(address _router) {\\n        router = _router;\\n        factory = IStargateRouter(_router).factory();\\n    }\\n\\n    function estimateFee(\\n        uint16 dstChainId,\\n        bytes calldata dstCallData,\\n        uint256 dstGasForCall,\\n        uint256 dstNativeAmount,\\n        address from\\n    ) external view returns (uint256) {\\n        address dst = dstAddress[dstChainId];\\n        if (dst == address(0)) revert DstChainNotFound(dstChainId);\\n\\n        (uint256 fee, ) = IStargateRouter(router).quoteLayerZeroFee(\\n            dstChainId,\\n            1, /*TYPE_SWAP_REMOTE*/\\n            abi.encodePacked(dst),\\n            abi.encodePacked(from, dstCallData),\\n            IStargateRouter.lzTxObj(dstGasForCall, dstNativeAmount, abi.encodePacked(from))\\n        );\\n        return fee;\\n    }\\n\\n    function updateDstAddress(uint16 dstChainId, address _dstAddress) external onlyOwner {\\n        dstAddress[dstChainId] = _dstAddress;\\n        emit UpdateDstAddress(dstChainId, _dstAddress);\\n    }\\n\\n    function transferNative(uint256 amount, TransferParams calldata params) external payable {\\n        _transfer(params, payable(msg.sender), msg.value - amount);\\n    }\\n\\n    function transferERC20(\\n        address token,\\n        uint256 amount,\\n        TransferParams calldata params\\n    ) external payable {\\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\\n\\n        _transfer(params, payable(msg.sender), msg.value);\\n    }\\n\\n    function _transfer(\\n        TransferParams calldata params,\\n        address payable from,\\n        uint256 fee\\n    ) internal {\\n        if (params.dstCallData.length < 20) revert InvalidDstSwapData();\\n\\n        if (params.swapData.length > 0) {\\n            (address to, bytes memory data) = abi.decode(params.swapData, (address, bytes));\\n            (bool ok, bytes memory reason) = to.call(data);\\n            if (!ok) revert SwapFailure(reason);\\n        }\\n\\n        address dst = dstAddress[params.dstChainId];\\n        if (dst == address(0)) revert DstChainNotFound(params.dstChainId);\\n\\n        address pool = IStargateFactory(factory).getPool(params.poolId);\\n        if (pool == address(0)) revert PoolNotFound(params.poolId);\\n\\n        address token = IStargatePool(pool).token();\\n        IERC20(token).approve(router, params.amount);\\n        IStargateRouter(router).swap{value: fee}(\\n            params.dstChainId,\\n            params.poolId,\\n            params.dstPoolId,\\n            from,\\n            params.amount,\\n            params.dstMinAmount,\\n            IStargateRouter.lzTxObj(params.dstGasForCall, params.dstNativeAmount, abi.encodePacked(from)),\\n            abi.encodePacked(dst),\\n            abi.encodePacked(from, params.dstCallData)\\n        );\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // RECEIVER FUNCTIONS\\n    function sgReceive(\\n        uint16 srcChainId,\\n        bytes calldata srcAddress,\\n        uint256 nonce,\\n        address token,\\n        uint256 amountLD,\\n        bytes calldata payload\\n    ) external {\\n        if (msg.sender != router) revert Forbidden();\\n\\n        address srcFrom = address(bytes20(payload[0:20]));\\n        (address to, bytes memory data) = abi.decode(payload[20:], (address, bytes));\\n        if (IERC20(token).allowance(address(this), to) == 0) {\\n            IERC20(token).approve(to, type(uint256).max);\\n        }\\n        {\\n            (bool ok, bytes memory reason) = to.call(data);\\n            if (!ok) emit CallFailure(to, data, reason);\\n        }\\n\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\n        if (balance > 0) {\\n            IERC20(token).safeTransfer(to, balance);\\n            to.call(abi.encodeWithSelector(IStargateVault.onReceiveERC20.selector, token, srcFrom, balance));\\n        }\\n\\n        balance = address(this).balance;\\n        if (balance > 0) {\\n            payable(srcFrom).sendValue(balance);\\n        }\\n\\n        emit SGReceive(srcChainId, srcAddress, nonce, token, amountLD, payload);\\n    }\\n}\\n\",\"keccak256\":\"0xa1554f95dcc07d247be7f4a6048118dd37dcd67ccc0af9acc2a2e01d44677a34\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateFactory {\\n    function getPool(uint256 poolId) external view returns (address);\\n\\n    function allPools(uint256 index) external view returns (address);\\n\\n    function allPoolsLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x29447b67ae12e2954b47383d8101eb1826d2902f1c62c715755f9ac0c76395ae\",\"license\":\"MIT\"},\"contracts/interfaces/IStargatePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargatePool {\\n    function poolId() external view returns (uint256);\\n\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0x4d0d8f0773939f6636c11e30d5f620183bede767e267231fb69f2973e343bc26\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateProxy {\\n    error SwapFailure(bytes reason);\\n    error DstChainNotFound(uint16 chainId);\\n    error PoolNotFound(uint256 poolId);\\n    error Forbidden();\\n    error InvalidDstSwapData();\\n\\n    event UpdateDstAddress(uint16 indexed dstChainId, address indexed dstAddress);\\n    event CallFailure(address to, bytes data, bytes reason);\\n    event SGReceive(\\n        uint16 indexed srcChainId,\\n        bytes indexed srcAddress,\\n        uint256 indexed nonce,\\n        address token,\\n        uint256 amountLD,\\n        bytes payload\\n    );\\n\\n    struct TransferParams {\\n        bytes swapData;\\n        uint256 poolId;\\n        uint256 amount;\\n        uint16 dstChainId;\\n        uint256 dstPoolId;\\n        uint256 dstMinAmount;\\n        bytes dstCallData;\\n        uint256 dstGasForCall;\\n        uint256 dstNativeAmount;\\n    }\\n\\n    function estimateFee(\\n        uint16 dstChainId,\\n        bytes calldata dstCallData,\\n        uint256 dstGasForCall,\\n        uint256 dstNativeAmount,\\n        address from\\n    ) external view returns (uint256);\\n\\n    function updateDstAddress(uint16 dstChainId, address _dstAddress) external;\\n\\n    function transferNative(uint256 amount, TransferParams calldata params) external payable;\\n\\n    function transferERC20(\\n        address token,\\n        uint256 amount,\\n        TransferParams calldata params\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x5ae7200b2273d85353145dd141219eb541d79571b3b015a4206f04825bd364ce\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateReceiver {\\n    function sgReceive(\\n        uint16 _chainId,\\n        bytes memory _srcAddress,\\n        uint256 _nonce,\\n        address _token,\\n        uint256 amountLD,\\n        bytes memory payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0x94c6c2b54161f27ca5c45ea5d817a6dbe8ad3e4b052ba9c3da7346dfc39983ba\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateRouter {\\n    event Revert(uint8 bridgeFunctionType, uint16 chainId, bytes srcAddress, uint256 nonce);\\n    event CachedSwapSaved(\\n        uint16 chainId,\\n        bytes srcAddress,\\n        uint256 nonce,\\n        address token,\\n        uint256 amountLD,\\n        address to,\\n        bytes payload,\\n        bytes reason\\n    );\\n    event RevertRedeemLocal(\\n        uint16 srcChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        bytes to,\\n        uint256 redeemAmountSD,\\n        uint256 mintAmountSD,\\n        uint256 indexed nonce,\\n        bytes indexed srcAddress\\n    );\\n    event RedeemLocalCallback(\\n        uint16 srcChainId,\\n        bytes indexed srcAddress,\\n        uint256 indexed nonce,\\n        uint256 srcPoolId,\\n        uint256 dstPoolId,\\n        address to,\\n        uint256 amountSD,\\n        uint256 mintAmountSD\\n    );\\n\\n    struct lzTxObj {\\n        uint256 dstGasForCall;\\n        uint256 dstNativeAmount;\\n        bytes dstNativeAddr;\\n    }\\n\\n    function factory() external view returns (address);\\n\\n    function bridge() external view returns (address);\\n\\n    function revertLookup(\\n        uint16 chainId,\\n        bytes calldata srcAddress,\\n        uint256 nonce\\n    ) external view returns (bytes memory);\\n\\n    function cachedSwapLookup(\\n        uint16 chainId,\\n        bytes calldata srcAddress,\\n        uint256 nonce\\n    )\\n        external\\n        view\\n        returns (\\n            address token,\\n            uint256 amountLD,\\n            address to,\\n            bytes calldata payload\\n        );\\n\\n    function addLiquidity(\\n        uint256 _poolId,\\n        uint256 _amountLD,\\n        address _to\\n    ) external;\\n\\n    function swap(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress,\\n        uint256 _amountLD,\\n        uint256 _minAmountLD,\\n        lzTxObj memory _lzTxParams,\\n        bytes calldata _to,\\n        bytes calldata _payload\\n    ) external payable;\\n\\n    function redeemRemote(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress,\\n        uint256 _amountLP,\\n        uint256 _minAmountLD,\\n        bytes calldata _to,\\n        lzTxObj memory _lzTxParams\\n    ) external payable;\\n\\n    function instantRedeemLocal(\\n        uint16 _srcPoolId,\\n        uint256 _amountLP,\\n        address _to\\n    ) external returns (uint256);\\n\\n    function redeemLocal(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress,\\n        uint256 _amountLP,\\n        bytes calldata _to,\\n        lzTxObj memory _lzTxParams\\n    ) external payable;\\n\\n    function sendCredits(\\n        uint16 _dstChainId,\\n        uint256 _srcPoolId,\\n        uint256 _dstPoolId,\\n        address payable _refundAddress\\n    ) external payable;\\n\\n    function quoteLayerZeroFee(\\n        uint16 _dstChainId,\\n        uint8 _functionType,\\n        bytes calldata _toAddress,\\n        bytes calldata _transferAndCallPayload,\\n        lzTxObj memory _lzTxParams\\n    ) external view returns (uint256, uint256);\\n\\n    function revertRedeemLocal(\\n        uint16 _dstChainId,\\n        bytes calldata _srcAddress,\\n        uint256 _nonce,\\n        address payable _refundAddress,\\n        lzTxObj memory _lzTxParams\\n    ) external payable;\\n\\n    function retryRevert(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint256 _nonce\\n    ) external payable;\\n\\n    function clearCachedSwap(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint256 _nonce\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa7870e58b768496033192fb5ad3ab0f85c561ccf113548636931054796abc4d2\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStargateVault {\\n    function onReceiveERC20(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x7a17ee4817020788870682284807b0413f007e868b0b708238affc940375a2af\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0806040523462000126576200003090620014ee80380380916200002582856200012b565b833981019062000165565b60008054336001600160a01b03198216811783556040519293602092849260049284926001600160a01b03929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08a80a3608081905263c45a015560e01b8352165afa9182156200011a5791620000e5575b5060a052604051611367908162000187823960805181818160b10152818161035d01528181610921015261102d015260a0518181816102b70152610fad0152f35b6200010b915060203d811162000112575b6200010281836200012b565b81019062000165565b38620000a4565b503d620000f6565b604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200014f57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126200012657516001600160a01b038116810362000126579056fe608060408181526004918236101561001657600080fd5b600092833560e01c918263452cdfc514610ab65750816348b6fbd014610a36578163715018a6146109dc5781638da5cb5b146109b4578163a1250130146107c3578163ab8236f3146102e6578163c45a0155146102a2578163da27c07d14610248578163ea4152ca146101ab578163f2fde38b146100e4575063f887ea401461009e57600080fd5b346100e057816003193601126100e057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b9050346101a75760203660031901126101a7576100ff610b06565b90610108610b4a565b6001600160a01b0391821692831561015557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b6003199150606036830112610244576101c2610b06565b926044359267ffffffffffffffff84116102405761012090843603011261023c57516323b872dd60e01b6020820152336024808301919091523060448301523560648083019190915281526102399361022f9190610221608483610bf0565b6001600160a01b0316610cb0565b3491339101610f34565b80f35b8480fd5b8580fd5b8380fd5b8360031936810185136100e0576024359067ffffffffffffffff82116101a7576101209082360301126100e057823534039034821161028f57926102399293339101610f34565b634e487b7160e01b835260118452602483fd5b5050346100e057816003193601126100e057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9050346101a75760c03660031901126101a757610301610af0565b60249182359367ffffffffffffffff948581116107bf576103259036908401610b1c565b606435966001600160a01b039687891693909291848a036107bb5760a4359081116107bb576103579036908801610b1c565b969093897f00000000000000000000000000000000000000000000000000000000000000001633036107ac57876014116107a8578b8161039c8a880160148901610e8a565b8a51636eb1769f60e11b8152308782015291909d169181018290529c60209c8d8f6044818d5afa801561076f578e9f9d9e9d8591610779575b50156106fd575b808d85808e945183850182895af1916103f3610d8a565b92156106a3575b505050519d8e6370a0823160e01b8152308782015285818c5afa908115610699578a8d9e9f9a8d9e819d9e9c8795610661575b50918b939185938997966105a5575b50505050505050505047806104c4575b50505094817f4798e9efbbc84d88c90c46f86d32ae4d8c033fe3a2021cd045cab33f7102164a966060938351928392833781018c8152039020978151958652608435908601528401528160608401526080830137856080848301015260808161ffff604435971694601f80199101168101030190a480f35b809192939495979896504710610563578b808080938a3560601c5af16104e8610d8a565b50156104fb57808895979694939261044c565b845162461bcd60e51b8152918201899052603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608490fd5b855162461bcd60e51b81528084018b9052601d818401527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b825163a9059cbb60e01b828201526001600160a01b03881698810198895260208901869052899889966106449561063893919290916105fc91819060400103966105f7601f1998898101845283610bf0565b610cb0565b5163248ff46d60e01b9381019384526001600160a01b039096168c87019081529735606090811c60208a01526040890191909152919685920190565b03908101835282610bf0565b51925af150610651610d8a565b508b81388781808f8d8f9161043c565b959450929b50505082813d8311610692575b61067d8183610bf0565b810103126101a75790518b988b8b8f8b61042d565b503d610673565b8a513d85823e3d90fd5b836060936106e46106f1937fc036d68da21e5be9293413898f2f64fecaa05bddb70e0de0d853852ca7664fe797519687968b88528701526060860190610c12565b9184830390850152610c12565b0390a189388d816103fa565b8a5163095ea7b360e01b8152868101849052600019868201529e9c9d9c8f8b81875a92604493f1801561076f57908e9f9e809e9f8d93610741575b505090506103dc565b8161076092903d10610768575b6107588183610bf0565b810190610c98565b508d38610738565b503d61074e565b8b513d86823e3d90fd5b8e819f92503d83116107a1575b6107908183610bf0565b81010312610244578e9c51386103d5565b503d610786565b8b80fd5b508551631dd2188d60e31b8152fd5b8a80fd5b8680fd5b8383346100e05760031960a0368201126101a7576107df610af0565b9060243567ffffffffffffffff811161023c576107ff9036908701610b1c565b9290916084359660018060a01b039283891689036109b05761ffff169182885260209860018a5287892054968588161561099957918a91838a98979695948951986bffffffffffffffffffffffff19809c60601b16868b015260148a526108658a610bd4565b8a519b8c9460601b168096850152603484013781018b6034820152036014810189526034016108949089610bf0565b8651918b830152601482526108a882610bd4565b8651916108b483610ba2565b60443583526064358c84015287830152865197889687958695630a51236960e01b875286015260248501600190526044850160a0905260a485016108f791610c12565b8285820301606486015261090a91610c12565b9083820301608484015261091d91610c52565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa92831561098e578093610959575b505051908152f35b909180935082813d8311610987575b6109728183610bf0565b81010312610984575051908380610951565b80fd5b503d610968565b8251903d90823e3d90fd5b88516315fe4c1560e01b8152808501869052602490fd5b8780fd5b5050346100e057816003193601126100e057905490516001600160a01b039091168152602090f35b83346109845780600319360112610984576109f5610b4a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346100e057806003193601126100e057610a50610af0565b6024356001600160a01b0381169291908390036102445761ffff90610a73610b4a565b16808452600160205290832080546001600160a01b031916831790557f2a00dad3333a840171ea0391ef1a1241e87753bd39154bffbeee262a59a4b09d8380a380f35b849084346101a75760203660031901126101a7579160209261ffff610ad9610af0565b168252600184529020546001600160a01b03168152f35b6004359061ffff82168203610b0157565b600080fd5b600435906001600160a01b0382168203610b0157565b9181601f84011215610b015782359167ffffffffffffffff8311610b015760208381860195010111610b0157565b6000546001600160a01b03163303610b5e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6060810190811067ffffffffffffffff821117610bbe57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610bbe57604052565b90601f8019910116810190811067ffffffffffffffff821117610bbe57604052565b919082519283825260005b848110610c3e575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c1d565b9060606040610c799380518452602081015160208501520151918160408201520190610c12565b90565b67ffffffffffffffff8111610bbe57601f01601f191660200190565b90816020910312610b0157518015158103610b015790565b604051610d0e916001600160a01b0316610cc982610bd4565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1610d08610d8a565b91610dba565b80519081610d1b57505050565b8280610d2b938301019101610c98565b15610d335750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b3d15610db5573d90610d9b82610c7c565b91610da96040519384610bf0565b82523d6000602084013e565b606090565b91929015610e1c5750815115610dce575090565b3b15610dd75790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610e2f5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610e53906024830190610c12565b0390fd5b903590601e1981360301821215610b01570180359067ffffffffffffffff8211610b0157602001918136038313610b0157565b9190604083820312610b015782356001600160a01b0381168103610b01579260208101359067ffffffffffffffff8211610b01570181601f82011215610b0157803590610ed682610c7c565b92610ee46040519485610bf0565b82845260208383010111610b0157816000926020809301838601378301015290565b3561ffff81168103610b015790565b90816020910312610b0157516001600160a01b0381168103610b015790565b909160c08201916014610f478483610e57565b90501061131f57610f588180610e57565b90506112b8575b606081019061ffff610f7083610f06565b16600052602092600184526040600020549160018060a01b038316156112945760405163068bcd8d60e01b815281860135600482015285816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561120657600091611277575b506001600160a01b0316801561125c578560049160405192838092637e062a3560e11b82525afa9081156112065760009161122f575b506040805163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811660048301529184013560248201529095909187908390816000816044810103926001600160a01b03165af19182156112065761109792611212575b50610f06565b9060405193611136603461110e6bffffffffffffffffffffffff199a8b8d60601b169b8c8c8b015260148a526110cc8a610bd4565b604051996110d98b610ba2565b60e08801358b526101008801358d8c015260408b01526040519560601b168b8601526014855261110885610bd4565b85610e57565b8060409c929c519c8d938d85015284840137810160008382015203601481018b520189610bf0565b6001600160a01b0386163b15610b01576000976111c86111b561ffff9760a06111d8966040519e8f9d8e9c8d9b6327efc43f60e21b8d521660048c015282013560248b0152608082013560448b0152600180841b031660648a0152604081013560848a0152013560a488015261012060c4880152610124870190610c52565b60031993848783030160e4880152610c12565b9184830301610104850152610c12565b03926001600160a01b03165af18015611206576111f25750565b67ffffffffffffffff8111610bbe57604052565b6040513d6000823e3d90fd5b61122890883d8a11610768576107588183610bf0565b5038611091565b61124f9150863d8811611255575b6112478183610bf0565b810190610f15565b3861101c565b503d61123d565b6040516302ad881560e41b8152868301356004820152602490fd5b61128e9150863d8811611255576112478183610bf0565b38610fe6565b602461129f85610f06565b61ffff604051916315fe4c1560e01b8352166004820152fd5b6000806112d06112c88480610e57565b810190610e8a565b80519160209091019083906001600160a01b03165af16112ee610d8a565b90156112fa5750610f5f565b604051630c369d2560e01b815260206004820152908190610e53906024830190610c12565b6040516318d5844d60e01b8152600490fdfea2646970667358221220adbf545a712dbf55c4572480ec96d17677f9e04d3770741ed20280f13a0475a964736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/StargateProxy.sol:StargateProxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2411,
        "contract": "contracts/StargateProxy.sol:StargateProxy",
        "label": "dstAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      }
    }
  }
}